library(plotly)
library(ggplot2)
setwd("/Users/laura/Google Drive/KEGG-SIF/no-indirect/Analisis-Propiedades-isolatedNetworks//")
source("../bin/undirected_plots.R")
source("../bin/directed_plots.R")
ppi.nodes.all.file <- c("../sif-isolatedNetworks/PPI.ncbi.pathways.nodes.csv")
ppi.nodes.gc.nodes.file <- c("../sif-isolatedNetworks/PPI.ncbi.pathways.BigComponent.nodes.csv")
ppi.nodes.gc.edges.file <- c("../sif-isolatedNetworks/PPI.ncbi.pathways.BigComponent.edges.csv")
ppi.pdf.all.file <- c("PPI-All.pdf")
ppi.pdf.gc.file <- c("PPI-BigComponent.pdf")
plot_all_network(ppi.nodes.all.file, ppi.pdf.all.file)
plot_gcc_network(ppi.nodes.gc.nodes.file, ppi.nodes.gc.edges.file, ppi.pdf.gc.file)
rn.nodes.all.file <- c("../sif-isolatedNetworks/RN.ncbi.pathways.nodes.csv")
rn.nodes.gc.nodes.file <- c("../sif-isolatedNetworks/RN.ncbi.pathways.BigComponent.nodes.csv")
rn.nodes.gc.edges.file <- c("../sif-isolatedNetworks/RN.ncbi.pathways.BigComponent.edges.csv")
rn.pdf.all.file <- c("RN-All.pdf")
rn.pdf.gc.file <- c("RN-BigComponent.pdf")
plot_all_network_directed(rn.nodes.all.file, rn.pdf.all.file)
plot_gcc_network_directed(rn.nodes.gc.nodes.file, rn.nodes.gc.edges.file, rn.pdf.gc.file)
mn.nodes.all.file <- c("../sif-isolatedNetworks/MN.ncbi.pathways.nodes.csv")
mn.nodes.gc.nodes.file <- c("../sif-isolatedNetworks/MN.ncbi.pathways.BigComponent.nodes.csv")
mn.nodes.gc.edges.file <- c("../sif-isolatedNetworks/MN.ncbi.pathways.BigComponent.edges.csv")
mn.pdf.all.file <- c("MN-All.pdf")
mn.pdf.gc.file <- c("MN-BigComponent.pdf")
plot_all_network_directed(mn.nodes.all.file, mn.pdf.all.file)
plot_gcc_network_directed(mn.nodes.gc.nodes.file, mn.nodes.gc.edges.file, mn.pdf.gc.file)
setwd("/Users/laura/Google Drive/KEGG-SIF/no-indirect/comunidades-2level-withNames-isolatedNetworks/")
source("../bin/modularity_zscore.R")
mn.nodes <- "MN/MN.ncbi.pathways.nodes"
mn.edges <- "MN/MN.ncbi.pathways.edges"
mn.pdf <- "MN/Modularity-MN.pdf"
mn.q <- modularity_analysis(mn.nodes, mn.edges, mn.pdf)
rn.nodes <- "RN/RN.ncbi.pathways.nodes"
rn.edges <- "RN/RN.ncbi.pathways.edges"
rn.pdf <- "RN/Modularity-RN.pdf"
rn.q <- modularity_analysis(rn.nodes, rn.edges, rn.pdf)
ppi.nodes <- "PPI/PPI.ncbi.pathways.nodes"
ppi.edges <- "PPI/PPI.ncbi.pathways.edges"
ppi.pdf <- "PPI/Modularity-PPI.pdf"
ppi.q <- modularity_analysis(ppi.nodes, ppi.edges, ppi.pdf)
mn.q
rn.q
ppi.q
library(plotly)
library(ggplot2)
setwd("/Users/laura/Google Drive/KEGG-SIF/no-indirect/Analisis-Propiedades/")
pdf("Topological-Metrics-All.pdf", onefile = T)
nodes.all <- read.table("../sif-allKEGG/AllKEGG.ncbi.filter.header.Comunidades.node.csv", sep=",", header=T, stringsAsFactors = F)
table.k.log <- table(log10(nodes.all$Degree))
max.table.k.log <- max(as.numeric(names(table.k.log)))
y <- as.vector(log10(table.k.log))
x <- as.numeric(names(table.k.log))
data <- data.frame(x=x, y=y)
ggplot(data = data, aes(x = x, y = y)) +
geom_point(color='blue') +
geom_smooth(method = "lm", se = FALSE, col="black") +
labs( x = "log10(k)", y = "log10(Frequency)") +
ylim(0, max(data$y)) +
theme_bw(base_size = 25)
dev.off()
pdf("Topological-Metrics.pdf", onefile = T)
edges <- read.table("../sif-allKEGG/AllKEGG.ncbi.filter.header.BigComponent.edges.csv", sep=",", header=T, stringsAsFactors = F)
dfP <- as.data.frame(edges$NPATHWAYS)
pdf("Cumulative-per-edge.pdf")
ggplot(dfP, aes(edges$NPATHWAYS)) + stat_ecdf(geom = "point", size = 1, color='blue') +
xlab( "Number of pathways per edge") +
ylab("Cumulative frequency") +
geom_hline(yintercept = 1, linetype="dashed",
color = "black", size=0.3) +
theme_bw(base_size = 25)
dev.off()
dfE <- as.data.frame(log10(edges$EdgeBetweenness))
pdf("Cumulative-edge-betwenness.pdf")
ggplot(dfE, aes(log10(edges$EdgeBetweenness))) + stat_ecdf(geom = "point", size = 0.3, color='blue') +
xlab("log10(Edge Betweenness)") +
ylab("Cumulative frequency") +
geom_hline(yintercept = 1, linetype="dashed",
color = "black", size=0.3) +
theme_bw(base_size = 25)
dev.off()
dfEBV <- data.frame(logEB = log10(edges$EdgeBetweenness), vias = edges$NPATHWAYS)
pdf("Pathways-betwenness.pdf")
ggplot(dfEBV, aes(x=logEB, y=vias)) +
geom_point(size = 0.5, color='blue')+
labs( x = "log10(Edge Betweenness)", y = "Number of pathways") +
theme_bw(base_size = 25)
dev.off()
plot(edges$EdgeBetweenness, edges$NPATHWAYS, xlab ="log10(Edge Betweenness)", ylab = "Number of pathways", cex = 0.5)
cor.test(log10(edges$EdgeBetweenness), edges$NPATHWAYS, alternative = "two.sided", method="spearman")
#### EDGES THAT BELONG TO ONE PATHWAY
sum(edges$NPATHWAYS == 1)/nrow(edges)
#### EDGES THAT BELONG TO MORE THAN 10 PATHWAYS
sum(edges$NPATHWAYS > 10)/nrow(edges)
#### EDGES THAT BELONG TO MORE THAN 20 PATHWAYS
sum(edges$NPATHWAYS > 20)/nrow(edges)
nodes <- read.table("../sif-allKEGG/AllKEGG.ncbi.filter.header.BigComponent.nodes.csv", sep=",", header=T, stringsAsFactors = F)
table.k <- table(nodes$Degree)
max.table.k <- max(as.numeric(names(table.k)))
# No pude rehacer esta grafica con ggplot
plot(log10(table.k), type="l", xaxt="n", xlab = "k", ylab="log10(Frequency)")
axis(side = 1, at = seq(0.5, max.table.k, by=10), labels = seq(1,max.table.k, by=10))
ggplot(as.data.frame(nodes$Degree)) +
geom_freqpoly(aes(x = nodes$Degree), stat = 'count') +
labs( x = "Degree (k)", y = "Frequency")
table.k.log <- table(log10(nodes$Degree))
max.table.k.log <- max(as.numeric(names(table.k.log)))
y <- as.vector(log10(table.k.log))
x <- as.numeric(names(table.k.log))
plot(log10(table.k.log), type="p", xaxt="n", xlab = "log10(k)", ylab="log10(Frequency)", col="blue")
axis(side = 1, at = seq(1, max.table.k.log, by=1), labels = seq(1,max.table.k.log, by=1))
abline(lm(y ~ x  ), lwd = 4)
data <- data.frame(x=x, y=y)
pdf("Degree-Distribution.pdf")
ggplot(data = data, aes(x = x, y = y)) +
geom_point(color='blue') +
geom_smooth(method = "lm", se = FALSE, col="black") +
labs( x = "log10(k)", y = "log10(Frequency)") +
ylim(0, max(data$y)) +
theme_bw(base_size = 25)
dev.off()
pdf("Average-Shortest-Path.pdf")
ggplot(as.data.frame(nodes$AverageShortestPathLength), aes(x=nodes$AverageShortestPathLength)) +
geom_histogram(color="darkblue", fill="white") +
labs( x = "Average Shortest Path Length", y = "Frequency") +
theme_bw(base_size = 25)
dev.off()
p.paths <- plot_ly(data = nodes, x = ~BetweennessCentrality, y = ~AverageShortestPathLength, text = ~shared.name , type = 'scatter')
p.paths
htmlwidgets::saveWidget(as_widget(p.paths), "Betweenness-ShortestPaths.html")
p.radial <- plot_ly(data = nodes, x = ~BetweennessCentrality, y = ~Radiality, text = ~shared.name , type = 'scatter')
p.radial
htmlwidgets::saveWidget(as_widget(p.radial), "Betweenness-Radiality.html")
pdf("core-periphery-GCC.pdf")
ggplot(as.data.frame(nodes$ClosenessCentrality), aes(x=nodes$ClosenessCentrality)) +
geom_histogram(color="darkblue", fill="white", bins = 50) +
labs( x = "Closeness Centrality", y = "Frequency") +
theme_bw(base_size = 25)
dev.off()
dev.off()
dev-off()
dev.off()
pdf("Topological-Metrics-All.pdf", onefile = T)
nodes.all <- read.table("../sif-allKEGG/AllKEGG.ncbi.filter.header.Comunidades.node.csv", sep=",", header=T, stringsAsFactors = F)
nodes.all <- read.table("../sif-allKEGG/AllKEGG.ncbi.filter.header.txt.Comunidades.node.csv", sep=",", header=T, stringsAsFactors = F)
table.k.log <- table(log10(nodes.all$Degree))
max.table.k.log <- max(as.numeric(names(table.k.log)))
y <- as.vector(log10(table.k.log))
x <- as.numeric(names(table.k.log))
data <- data.frame(x=x, y=y)
ggplot(data = data, aes(x = x, y = y)) +
geom_point(color='blue') +
geom_smooth(method = "lm", se = FALSE, col="black") +
labs( x = "log10(k)", y = "log10(Frequency)") +
ylim(0, max(data$y)) +
theme_bw(base_size = 25)
dev.off()
pdf("Topological-Metrics.pdf", onefile = T)
edges <- read.table("../sif-allKEGG/AllKEGG.ncbi.filter.header.BigComponent.edges.csv", sep=",", header=T, stringsAsFactors = F)
dfP <- as.data.frame(edges$NPATHWAYS)
pdf("Cumulative-per-edge.pdf")
ggplot(dfP, aes(edges$NPATHWAYS)) + stat_ecdf(geom = "point", size = 1, color='blue') +
xlab( "Number of pathways per edge") +
ylab("Cumulative frequency") +
geom_hline(yintercept = 1, linetype="dashed",
color = "black", size=0.3) +
theme_bw(base_size = 25)
dev.off()
dfE <- as.data.frame(log10(edges$EdgeBetweenness))
pdf("Cumulative-edge-betwenness.pdf")
ggplot(dfE, aes(log10(edges$EdgeBetweenness))) + stat_ecdf(geom = "point", size = 0.3, color='blue') +
xlab("log10(Edge Betweenness)") +
ylab("Cumulative frequency") +
geom_hline(yintercept = 1, linetype="dashed",
color = "black", size=0.3) +
theme_bw(base_size = 25)
dev.off()
dfEBV <- data.frame(logEB = log10(edges$EdgeBetweenness), vias = edges$NPATHWAYS)
pdf("Pathways-betwenness.pdf")
ggplot(dfEBV, aes(x=logEB, y=vias)) +
geom_point(size = 0.5, color='blue')+
labs( x = "log10(Edge Betweenness)", y = "Number of pathways") +
theme_bw(base_size = 25)
dev.off()
plot(edges$EdgeBetweenness, edges$NPATHWAYS, xlab ="log10(Edge Betweenness)", ylab = "Number of pathways", cex = 0.5)
cor.test(log10(edges$EdgeBetweenness), edges$NPATHWAYS, alternative = "two.sided", method="spearman")
#### EDGES THAT BELONG TO ONE PATHWAY
sum(edges$NPATHWAYS == 1)/nrow(edges)
#### EDGES THAT BELONG TO MORE THAN 10 PATHWAYS
sum(edges$NPATHWAYS > 10)/nrow(edges)
#### EDGES THAT BELONG TO MORE THAN 20 PATHWAYS
sum(edges$NPATHWAYS > 20)/nrow(edges)
nodes <- read.table("../sif-allKEGG/AllKEGG.ncbi.filter.header.BigComponent.nodes.csv", sep=",", header=T, stringsAsFactors = F)
table.k <- table(nodes$Degree)
max.table.k <- max(as.numeric(names(table.k)))
# No pude rehacer esta grafica con ggplot
plot(log10(table.k), type="l", xaxt="n", xlab = "k", ylab="log10(Frequency)")
axis(side = 1, at = seq(0.5, max.table.k, by=10), labels = seq(1,max.table.k, by=10))
ggplot(as.data.frame(nodes$Degree)) +
geom_freqpoly(aes(x = nodes$Degree), stat = 'count') +
labs( x = "Degree (k)", y = "Frequency")
table.k.log <- table(log10(nodes$Degree))
max.table.k.log <- max(as.numeric(names(table.k.log)))
y <- as.vector(log10(table.k.log))
x <- as.numeric(names(table.k.log))
plot(log10(table.k.log), type="p", xaxt="n", xlab = "log10(k)", ylab="log10(Frequency)", col="blue")
axis(side = 1, at = seq(1, max.table.k.log, by=1), labels = seq(1,max.table.k.log, by=1))
abline(lm(y ~ x  ), lwd = 4)
data <- data.frame(x=x, y=y)
pdf("Degree-Distribution.pdf")
ggplot(data = data, aes(x = x, y = y)) +
geom_point(color='blue') +
geom_smooth(method = "lm", se = FALSE, col="black") +
labs( x = "log10(k)", y = "log10(Frequency)") +
ylim(0, max(data$y)) +
theme_bw(base_size = 25)
dev.off()
pdf("Average-Shortest-Path.pdf")
ggplot(as.data.frame(nodes$AverageShortestPathLength), aes(x=nodes$AverageShortestPathLength)) +
geom_histogram(color="darkblue", fill="white") +
labs( x = "Average Shortest Path Length", y = "Frequency") +
theme_bw(base_size = 25)
dev.off()
p.paths <- plot_ly(data = nodes, x = ~BetweennessCentrality, y = ~AverageShortestPathLength, text = ~shared.name , type = 'scatter')
p.paths
htmlwidgets::saveWidget(as_widget(p.paths), "Betweenness-ShortestPaths.html")
p.radial <- plot_ly(data = nodes, x = ~BetweennessCentrality, y = ~Radiality, text = ~shared.name , type = 'scatter')
p.radial
htmlwidgets::saveWidget(as_widget(p.radial), "Betweenness-Radiality.html")
pdf("core-periphery-GCC.pdf")
ggplot(as.data.frame(nodes$ClosenessCentrality), aes(x=nodes$ClosenessCentrality)) +
geom_histogram(color="darkblue", fill="white", bins = 50) +
labs( x = "Closeness Centrality", y = "Frequency") +
theme_bw(base_size = 25)
dev.off()
setwd("/Users/laura/Google Drive/KEGG-SIF/no-indirect/comunidades-2level-withNames/Analisis-Comunidades/")
library(igraph)
library(ggplot2)
nodes <- read.table(file = "AllKEGG.ncbi.filter.nodes", header=F, stringsAsFactors = F)
names(nodes) <- c("name", "community")
edges <- read.table(file = "AllKEGG.ncbi.filter.edges", header=F, stringsAsFactors = F)
names(edges) <- c("from", "to", "npath", "path")
net <- graph_from_data_frame(edges, directed=FALSE, vertices=nodes)
modularity.net <- modularity(net, nodes$community)
modularity.net
modularity.permutate <- sapply(seq(1,1000), function(x, net, nodes){
net.permute <- permute(net, permutation= sample(seq(1,length(V(net))), length(V(net))))
modularity(net.permute, nodes$community)
}, net=net, nodes=nodes, simplify = T)
z.test = function(x,mu,popvar){
one.tail.p <- NULL
z.score <- (mean(x)-mu)/(popvar/sqrt(length(x)))
one.tail.p <- pnorm(abs(z.score),lower.tail = FALSE)
cat(" z =",z.score,"\n","one-tailed probability =", one.tail.p,"\n",
"two-tailed probability =", 2*one.tail.p )
}
z.test(modularity.net, mean(modularity.permutate), sd(modularity.permutate))
pdf ("Q-value.pdf")
ggplot(as.data.frame(modularity.permutate), aes(x=modularity.permutate)) +
geom_histogram(color="darkblue", fill="lightblue", binwidth = 0.0005) +
geom_vline(aes(xintercept=modularity.net),
color="black",  size=0.5, linetype="dashed")  +
labs( x = "Q value", y = "Frequency") +
theme_bw(base_size = 22)
dev.off()
pdf("Q-value-Dist.pdf")
ggplot(as.data.frame(modularity.permutate), aes(x=modularity.permutate)) +
geom_histogram(color="darkblue", fill="lightblue") +
labs( x = "", y = "") +
theme_bw(base_size = 32)
dev.off()
summary <- read.table("../2-level-summaryPerVia.txt", header=T, sep="\t", stringsAsFactors = F)
comunidades <- colnames(summary)[2:322]
comunidades.size <- sapply(comunidades, function(x, summary){
sum(summary[,x])
}, summary = summary, simplify = T)
enriq <- read.table("../2-level-summaryPerVia_ALLKEGG_enrichment_NoRedundantes.txt", header=T, sep="\t", stringsAsFactors = F)
comunidades.vias <- sapply(comunidades, function(x, enriq){
nrow(subset(enriq, Comunidad == x))
}, enriq = enriq)
#### CORRELACION
df <- data.frame(size = comunidades.size, vias = comunidades.vias)
pdf("CommunitySize.pdf")
ggplot(df, aes(x=size, y=vias)) +
geom_point()+
geom_smooth(method=lm) +
labs( x = "Community size", y = "Number of enriched pathways") +
theme_bw(base_size = 22)
dev.off()
sum(comunidades.vias == 0)
sum(comunidades.vias == 1)
cor(comunidades.size, comunidades.vias, method="spearman")
cor.test(comunidades.size, comunidades.vias, alternative = "two.sided", method="spearman")
#### CORRELACION -95% TRIMMED DISTRIBUTION
size.quantile <- quantile(df$size, probs=seq(0,1,0.025))
df.trimmed <- subset(df, size >= size.quantile[2] & size < size.quantile[40])
pdf("CommunitySize-Trimmed.pdf")
ggplot(df.trimmed, aes(x=size, y=vias)) +
geom_point()+
geom_smooth(method=lm) +
labs( x = "Community size", y = "Number of enriched pathways") +
theme_bw()
dev.off()
cor(comunidades.size, comunidades.vias, method="spearman")
cor.test(comunidades.size, comunidades.vias, alternative = "two.sided", method="spearman")
head (colnames(summary)[2:322])
tail(colnames(summary)[2:322])
tail(colnames(summary)[2:323])
head (colnames(summary)[1:322])
163 + 74
321-74
163/247
321-74
library(plotly)
library(ggplot2)
setwd("/Users/laura/Google Drive/KEGG-SIF/no-indirect/Analisis-Propiedades/")
edges <- read.table("../sif-allKEGG/AllKEGG.ncbi.filter.header.BigComponent.edges.csv", sep=",", header=T, stringsAsFactors = F)
dfP <- as.data.frame(edges$NPATHWAYS)
dfE <- as.data.frame(log10(edges$EdgeBetweenness))
dfEBV <- data.frame(logEB = log10(edges$EdgeBetweenness), vias = edges$NPATHWAYS)
#### EDGES THAT BELONG TO ONE PATHWAY
sum(edges$NPATHWAYS == 1)/nrow(edges)
#### EDGES THAT BELONG TO MORE THAN 10 PATHWAYS
sum(edges$NPATHWAYS > 10)/nrow(edges)
#### EDGES THAT BELONG TO MORE THAN 20 PATHWAYS
sum(edges$NPATHWAYS > 20)/nrow(edges)
plot(edges$EdgeBetweenness, edges$NPATHWAYS, xlab ="log10(Edge Betweenness)", ylab = "Number of pathways", cex = 0.5)
cor.test(log10(edges$EdgeBetweenness), edges$NPATHWAYS, alternative = "two.sided", method="spearman")
